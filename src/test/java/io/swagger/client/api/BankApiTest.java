/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Account;
import io.swagger.client.model.Account1;
import io.swagger.client.model.InlineResponse20035;
import io.swagger.client.model.PostTxBody;
import io.swagger.client.model.StdTx;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BankApi
 */
@Ignore
public class BankApiTest {

    private final BankApi api = new BankApi();

    
    /**
     * Get the account balances
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressBalancesTest() throws ApiException {
        String address = null;
        Map<String, Object> response = api.getAddressBalances(address);

        // TODO: test validations
    }
    
    /**
     * Get the current bankx parameters
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBankParamsTest() throws ApiException {
        InlineResponse20035 response = api.getBankParams();

        // TODO: test validations
    }
    
    /**
     * Send coins from one account to another
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendCoinsTest() throws ApiException {
        String address = null;
        Account account = null;
        StdTx response = api.sendCoins(address, account);

        // TODO: test validations
    }
    
    /**
     * Mark if memo is required to receive coins
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMemoRequiredTest() throws ApiException {
        Account1 account = null;
        StdTx response = api.setMemoRequired(account);

        // TODO: test validations
    }
    
    /**
     * Operate a supervised transfer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transferSupervisedCoinsTest() throws ApiException {
        String address = null;
        PostTxBody postTxBody = null;
        StdTx response = api.transferSupervisedCoins(address, postTxBody);

        // TODO: test validations
    }
    
}
