/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.StdTx;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BancorliteApi
 */
@Ignore
public class BancorliteApiTest {

    private final BancorliteApi api = new BancorliteApi();

    /**
     * cancel bancor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void bancorCancelTest() throws ApiException {
        Object body = null;
        StdTx response = api.bancorCancel(body);

        // TODO: test validations
    }
    /**
     * create bancor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void bancorInitTest() throws ApiException {
        Object body = null;
        StdTx response = api.bancorInit(body);

        // TODO: test validations
    }
    /**
     * trade with bancor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void bancorTradeTest() throws ApiException {
        Object body = null;
        StdTx response = api.bancorTrade(body);

        // TODO: test validations
    }
    /**
     * get the bancor pool info
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBancorInfoTest() throws ApiException {
        String symbol = null;
        Map<String, Object> response = api.getBancorInfo(symbol);

        // TODO: test validations
    }
    /**
     * get all bancor infos
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBancorInfosTest() throws ApiException {
        Object response = api.getBancorInfos();

        // TODO: test validations
    }
    /**
     * Get the current bancorlite parameters
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBancorliteParamsTest() throws ApiException {
        Object response = api.getBancorliteParams();

        // TODO: test validations
    }
}
