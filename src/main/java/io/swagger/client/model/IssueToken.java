/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BaseReq;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * IssueToken
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-26T10:53:15.911+08:00[Asia/Shanghai]")
public class IssueToken {
  @SerializedName("base_req")
  private BaseReq baseReq = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("total_supply")
  private String totalSupply = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("mintable")
  private Boolean mintable = null;

  @SerializedName("burnable")
  private Boolean burnable = null;

  @SerializedName("addr_forbiddable")
  private Boolean addrForbiddable = null;

  @SerializedName("token_forbiddable")
  private Boolean tokenForbiddable = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("identity")
  private String identity = null;

  public IssueToken baseReq(BaseReq baseReq) {
    this.baseReq = baseReq;
    return this;
  }

   /**
   * Get baseReq
   * @return baseReq
  **/
  @Schema(required = true, description = "")
  public BaseReq getBaseReq() {
    return baseReq;
  }

  public void setBaseReq(BaseReq baseReq) {
    this.baseReq = baseReq;
  }

  public IssueToken name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "ABC Token", required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IssueToken symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(example = "abc", required = true, description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public IssueToken totalSupply(String totalSupply) {
    this.totalSupply = totalSupply;
    return this;
  }

   /**
   * Get totalSupply
   * @return totalSupply
  **/
  @Schema(example = "2000000000000000", required = true, description = "")
  public String getTotalSupply() {
    return totalSupply;
  }

  public void setTotalSupply(String totalSupply) {
    this.totalSupply = totalSupply;
  }

  public IssueToken owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @Schema(description = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public IssueToken mintable(Boolean mintable) {
    this.mintable = mintable;
    return this;
  }

   /**
   * Get mintable
   * @return mintable
  **/
  @Schema(example = "false", required = true, description = "")
  public Boolean isMintable() {
    return mintable;
  }

  public void setMintable(Boolean mintable) {
    this.mintable = mintable;
  }

  public IssueToken burnable(Boolean burnable) {
    this.burnable = burnable;
    return this;
  }

   /**
   * Get burnable
   * @return burnable
  **/
  @Schema(example = "true", required = true, description = "")
  public Boolean isBurnable() {
    return burnable;
  }

  public void setBurnable(Boolean burnable) {
    this.burnable = burnable;
  }

  public IssueToken addrForbiddable(Boolean addrForbiddable) {
    this.addrForbiddable = addrForbiddable;
    return this;
  }

   /**
   * Get addrForbiddable
   * @return addrForbiddable
  **/
  @Schema(example = "false", required = true, description = "")
  public Boolean isAddrForbiddable() {
    return addrForbiddable;
  }

  public void setAddrForbiddable(Boolean addrForbiddable) {
    this.addrForbiddable = addrForbiddable;
  }

  public IssueToken tokenForbiddable(Boolean tokenForbiddable) {
    this.tokenForbiddable = tokenForbiddable;
    return this;
  }

   /**
   * Get tokenForbiddable
   * @return tokenForbiddable
  **/
  @Schema(example = "false", required = true, description = "")
  public Boolean isTokenForbiddable() {
    return tokenForbiddable;
  }

  public void setTokenForbiddable(Boolean tokenForbiddable) {
    this.tokenForbiddable = tokenForbiddable;
  }

  public IssueToken url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(example = "www.abc.org", description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public IssueToken description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "token abc is a example token", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public IssueToken identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * Get identity
   * @return identity
  **/
  @Schema(description = "")
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueToken issueToken = (IssueToken) o;
    return Objects.equals(this.baseReq, issueToken.baseReq) &&
        Objects.equals(this.name, issueToken.name) &&
        Objects.equals(this.symbol, issueToken.symbol) &&
        Objects.equals(this.totalSupply, issueToken.totalSupply) &&
        Objects.equals(this.owner, issueToken.owner) &&
        Objects.equals(this.mintable, issueToken.mintable) &&
        Objects.equals(this.burnable, issueToken.burnable) &&
        Objects.equals(this.addrForbiddable, issueToken.addrForbiddable) &&
        Objects.equals(this.tokenForbiddable, issueToken.tokenForbiddable) &&
        Objects.equals(this.url, issueToken.url) &&
        Objects.equals(this.description, issueToken.description) &&
        Objects.equals(this.identity, issueToken.identity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseReq, name, symbol, totalSupply, owner, mintable, burnable, addrForbiddable, tokenForbiddable, url, description, identity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueToken {\n");
    
    sb.append("    baseReq: ").append(toIndentedString(baseReq)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    totalSupply: ").append(toIndentedString(totalSupply)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    mintable: ").append(toIndentedString(mintable)).append("\n");
    sb.append("    burnable: ").append(toIndentedString(burnable)).append("\n");
    sb.append("    addrForbiddable: ").append(toIndentedString(addrForbiddable)).append("\n");
    sb.append("    tokenForbiddable: ").append(toIndentedString(tokenForbiddable)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
