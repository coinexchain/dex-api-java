/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * more information on versions
 */
@ApiModel(description = "more information on versions")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-27T01:19:45.029Z")
public class InlineResponse200NodeInfoOther {
  @SerializedName("tx_index")
  private String txIndex = null;

  @SerializedName("rpc_address")
  private String rpcAddress = null;

  public InlineResponse200NodeInfoOther txIndex(String txIndex) {
    this.txIndex = txIndex;
    return this;
  }

   /**
   * Get txIndex
   * @return txIndex
  **/
  @ApiModelProperty(example = "on", value = "")
  public String getTxIndex() {
    return txIndex;
  }

  public void setTxIndex(String txIndex) {
    this.txIndex = txIndex;
  }

  public InlineResponse200NodeInfoOther rpcAddress(String rpcAddress) {
    this.rpcAddress = rpcAddress;
    return this;
  }

   /**
   * Get rpcAddress
   * @return rpcAddress
  **/
  @ApiModelProperty(example = "tcp://0.0.0.0:26657", value = "")
  public String getRpcAddress() {
    return rpcAddress;
  }

  public void setRpcAddress(String rpcAddress) {
    this.rpcAddress = rpcAddress;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200NodeInfoOther inlineResponse200NodeInfoOther = (InlineResponse200NodeInfoOther) o;
    return Objects.equals(this.txIndex, inlineResponse200NodeInfoOther.txIndex) &&
        Objects.equals(this.rpcAddress, inlineResponse200NodeInfoOther.rpcAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(txIndex, rpcAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200NodeInfoOther {\n");
    
    sb.append("    txIndex: ").append(toIndentedString(txIndex)).append("\n");
    sb.append("    rpcAddress: ").append(toIndentedString(rpcAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

