/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BaseReq;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

/**
 * Referee
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-27T01:19:45.029Z")
public class Referee extends HashMap<String, Object> {
  @SerializedName("base_req")
  private BaseReq baseReq = null;

  @SerializedName("referee")
  private String referee = null;

  public Referee baseReq(BaseReq baseReq) {
    this.baseReq = baseReq;
    return this;
  }

   /**
   * Get baseReq
   * @return baseReq
  **/
  @ApiModelProperty(required = true, value = "")
  public BaseReq getBaseReq() {
    return baseReq;
  }

  public void setBaseReq(BaseReq baseReq) {
    this.baseReq = baseReq;
  }

  public Referee referee(String referee) {
    this.referee = referee;
    return this;
  }

   /**
   * Get referee
   * @return referee
  **/
  @ApiModelProperty(required = true, value = "")
  public String getReferee() {
    return referee;
  }

  public void setReferee(String referee) {
    this.referee = referee;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Referee referee = (Referee) o;
    return Objects.equals(this.baseReq, referee.baseReq) &&
        Objects.equals(this.referee, referee.referee) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseReq, referee, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Referee {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    baseReq: ").append(toIndentedString(baseReq)).append("\n");
    sb.append("    referee: ").append(toIndentedString(referee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

