/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BlockID;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * BlockLastCommitPrecommits
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-27T01:19:45.029Z")
public class BlockLastCommitPrecommits {
  @SerializedName("validator_address")
  private String validatorAddress = null;

  @SerializedName("validator_index")
  private String validatorIndex = null;

  @SerializedName("height")
  private String height = null;

  @SerializedName("round")
  private String round = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("type")
  private BigDecimal type = null;

  @SerializedName("block_id")
  private BlockID blockId = null;

  @SerializedName("signature")
  private String signature = null;

  public BlockLastCommitPrecommits validatorAddress(String validatorAddress) {
    this.validatorAddress = validatorAddress;
    return this;
  }

   /**
   * Get validatorAddress
   * @return validatorAddress
  **/
  @ApiModelProperty(value = "")
  public String getValidatorAddress() {
    return validatorAddress;
  }

  public void setValidatorAddress(String validatorAddress) {
    this.validatorAddress = validatorAddress;
  }

  public BlockLastCommitPrecommits validatorIndex(String validatorIndex) {
    this.validatorIndex = validatorIndex;
    return this;
  }

   /**
   * Get validatorIndex
   * @return validatorIndex
  **/
  @ApiModelProperty(example = "0", value = "")
  public String getValidatorIndex() {
    return validatorIndex;
  }

  public void setValidatorIndex(String validatorIndex) {
    this.validatorIndex = validatorIndex;
  }

  public BlockLastCommitPrecommits height(String height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(example = "0", value = "")
  public String getHeight() {
    return height;
  }

  public void setHeight(String height) {
    this.height = height;
  }

  public BlockLastCommitPrecommits round(String round) {
    this.round = round;
    return this;
  }

   /**
   * Get round
   * @return round
  **/
  @ApiModelProperty(example = "0", value = "")
  public String getRound() {
    return round;
  }

  public void setRound(String round) {
    this.round = round;
  }

  public BlockLastCommitPrecommits timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(example = "2017-12-30T05:53:09.287+01:00", value = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public BlockLastCommitPrecommits type(BigDecimal type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "2.0", value = "")
  public BigDecimal getType() {
    return type;
  }

  public void setType(BigDecimal type) {
    this.type = type;
  }

  public BlockLastCommitPrecommits blockId(BlockID blockId) {
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @ApiModelProperty(value = "")
  public BlockID getBlockId() {
    return blockId;
  }

  public void setBlockId(BlockID blockId) {
    this.blockId = blockId;
  }

  public BlockLastCommitPrecommits signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @ApiModelProperty(example = "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==", value = "")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockLastCommitPrecommits blockLastCommitPrecommits = (BlockLastCommitPrecommits) o;
    return Objects.equals(this.validatorAddress, blockLastCommitPrecommits.validatorAddress) &&
        Objects.equals(this.validatorIndex, blockLastCommitPrecommits.validatorIndex) &&
        Objects.equals(this.height, blockLastCommitPrecommits.height) &&
        Objects.equals(this.round, blockLastCommitPrecommits.round) &&
        Objects.equals(this.timestamp, blockLastCommitPrecommits.timestamp) &&
        Objects.equals(this.type, blockLastCommitPrecommits.type) &&
        Objects.equals(this.blockId, blockLastCommitPrecommits.blockId) &&
        Objects.equals(this.signature, blockLastCommitPrecommits.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validatorAddress, validatorIndex, height, round, timestamp, type, blockId, signature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockLastCommitPrecommits {\n");
    
    sb.append("    validatorAddress: ").append(toIndentedString(validatorAddress)).append("\n");
    sb.append("    validatorIndex: ").append(toIndentedString(validatorIndex)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

