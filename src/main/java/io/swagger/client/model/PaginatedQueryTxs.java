/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TxQuery;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * PaginatedQueryTxs
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-26T10:53:15.911+08:00[Asia/Shanghai]")
public class PaginatedQueryTxs {
  @SerializedName("total_count")
  private BigDecimal totalCount = null;

  @SerializedName("count")
  private BigDecimal count = null;

  @SerializedName("page_number")
  private BigDecimal pageNumber = null;

  @SerializedName("page_total")
  private BigDecimal pageTotal = null;

  @SerializedName("limit")
  private BigDecimal limit = null;

  @SerializedName("txs")
  private List<TxQuery> txs = new ArrayList<TxQuery>();

  public PaginatedQueryTxs totalCount(BigDecimal totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(example = "1.0", required = true, description = "")
  public BigDecimal getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(BigDecimal totalCount) {
    this.totalCount = totalCount;
  }

  public PaginatedQueryTxs count(BigDecimal count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @Schema(example = "1.0", required = true, description = "")
  public BigDecimal getCount() {
    return count;
  }

  public void setCount(BigDecimal count) {
    this.count = count;
  }

  public PaginatedQueryTxs pageNumber(BigDecimal pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(example = "1.0", required = true, description = "")
  public BigDecimal getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(BigDecimal pageNumber) {
    this.pageNumber = pageNumber;
  }

  public PaginatedQueryTxs pageTotal(BigDecimal pageTotal) {
    this.pageTotal = pageTotal;
    return this;
  }

   /**
   * Get pageTotal
   * @return pageTotal
  **/
  @Schema(example = "1.0", required = true, description = "")
  public BigDecimal getPageTotal() {
    return pageTotal;
  }

  public void setPageTotal(BigDecimal pageTotal) {
    this.pageTotal = pageTotal;
  }

  public PaginatedQueryTxs limit(BigDecimal limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(example = "30.0", required = true, description = "")
  public BigDecimal getLimit() {
    return limit;
  }

  public void setLimit(BigDecimal limit) {
    this.limit = limit;
  }

  public PaginatedQueryTxs txs(List<TxQuery> txs) {
    this.txs = txs;
    return this;
  }

  public PaginatedQueryTxs addTxsItem(TxQuery txsItem) {
    this.txs.add(txsItem);
    return this;
  }

   /**
   * Get txs
   * @return txs
  **/
  @Schema(required = true, description = "")
  public List<TxQuery> getTxs() {
    return txs;
  }

  public void setTxs(List<TxQuery> txs) {
    this.txs = txs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaginatedQueryTxs paginatedQueryTxs = (PaginatedQueryTxs) o;
    return Objects.equals(this.totalCount, paginatedQueryTxs.totalCount) &&
        Objects.equals(this.count, paginatedQueryTxs.count) &&
        Objects.equals(this.pageNumber, paginatedQueryTxs.pageNumber) &&
        Objects.equals(this.pageTotal, paginatedQueryTxs.pageTotal) &&
        Objects.equals(this.limit, paginatedQueryTxs.limit) &&
        Objects.equals(this.txs, paginatedQueryTxs.txs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCount, count, pageNumber, pageTotal, limit, txs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaginatedQueryTxs {\n");
    
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageTotal: ").append(toIndentedString(pageTotal)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    txs: ").append(toIndentedString(txs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
