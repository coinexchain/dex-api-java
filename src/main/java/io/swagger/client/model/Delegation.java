/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Delegation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-26T10:53:15.911+08:00[Asia/Shanghai]")
public class Delegation {
  @SerializedName("delegator_address")
  private String delegatorAddress = null;

  @SerializedName("validator_address")
  private String validatorAddress = null;

  @SerializedName("shares")
  private String shares = null;

  @SerializedName("balance")
  private String balance = null;

  public Delegation delegatorAddress(String delegatorAddress) {
    this.delegatorAddress = delegatorAddress;
    return this;
  }

   /**
   * Get delegatorAddress
   * @return delegatorAddress
  **/
  @Schema(required = true, description = "")
  public String getDelegatorAddress() {
    return delegatorAddress;
  }

  public void setDelegatorAddress(String delegatorAddress) {
    this.delegatorAddress = delegatorAddress;
  }

  public Delegation validatorAddress(String validatorAddress) {
    this.validatorAddress = validatorAddress;
    return this;
  }

   /**
   * Get validatorAddress
   * @return validatorAddress
  **/
  @Schema(required = true, description = "")
  public String getValidatorAddress() {
    return validatorAddress;
  }

  public void setValidatorAddress(String validatorAddress) {
    this.validatorAddress = validatorAddress;
  }

  public Delegation shares(String shares) {
    this.shares = shares;
    return this;
  }

   /**
   * Get shares
   * @return shares
  **/
  @Schema(required = true, description = "")
  public String getShares() {
    return shares;
  }

  public void setShares(String shares) {
    this.shares = shares;
  }

  public Delegation balance(String balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @Schema(required = true, description = "")
  public String getBalance() {
    return balance;
  }

  public void setBalance(String balance) {
    this.balance = balance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Delegation delegation = (Delegation) o;
    return Objects.equals(this.delegatorAddress, delegation.delegatorAddress) &&
        Objects.equals(this.validatorAddress, delegation.validatorAddress) &&
        Objects.equals(this.shares, delegation.shares) &&
        Objects.equals(this.balance, delegation.balance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(delegatorAddress, validatorAddress, shares, balance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Delegation {\n");
    
    sb.append("    delegatorAddress: ").append(toIndentedString(delegatorAddress)).append("\n");
    sb.append("    validatorAddress: ").append(toIndentedString(validatorAddress)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
