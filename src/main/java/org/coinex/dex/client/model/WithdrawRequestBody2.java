/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coinex.dex.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.coinex.dex.client.model.BaseReq;

/**
 * WithdrawRequestBody2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-28T12:10:24.313+08:00")
public class WithdrawRequestBody2 {
  @SerializedName("base_req")
  private BaseReq baseReq = null;

  @SerializedName("withdraw_address")
  private String withdrawAddress = null;

  public WithdrawRequestBody2 baseReq(BaseReq baseReq) {
    this.baseReq = baseReq;
    return this;
  }

   /**
   * Get baseReq
   * @return baseReq
  **/
  @ApiModelProperty(value = "")
  public BaseReq getBaseReq() {
    return baseReq;
  }

  public void setBaseReq(BaseReq baseReq) {
    this.baseReq = baseReq;
  }

  public WithdrawRequestBody2 withdrawAddress(String withdrawAddress) {
    this.withdrawAddress = withdrawAddress;
    return this;
  }

   /**
   * Get withdrawAddress
   * @return withdrawAddress
  **/
  @ApiModelProperty(value = "")
  public String getWithdrawAddress() {
    return withdrawAddress;
  }

  public void setWithdrawAddress(String withdrawAddress) {
    this.withdrawAddress = withdrawAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WithdrawRequestBody2 withdrawRequestBody2 = (WithdrawRequestBody2) o;
    return Objects.equals(this.baseReq, withdrawRequestBody2.baseReq) &&
        Objects.equals(this.withdrawAddress, withdrawRequestBody2.withdrawAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseReq, withdrawAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WithdrawRequestBody2 {\n");
    
    sb.append("    baseReq: ").append(toIndentedString(baseReq)).append("\n");
    sb.append("    withdrawAddress: ").append(toIndentedString(withdrawAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

