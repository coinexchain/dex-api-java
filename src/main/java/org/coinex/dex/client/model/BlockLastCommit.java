/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coinex.dex.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.coinex.dex.client.model.BlockID;
import org.coinex.dex.client.model.BlockLastCommitPrecommits;

/**
 * BlockLastCommit
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-09T11:28:51.986+08:00")
public class BlockLastCommit {
  @SerializedName("block_id")
  private BlockID blockId = null;

  @SerializedName("precommits")
  private List<BlockLastCommitPrecommits> precommits = null;

  public BlockLastCommit blockId(BlockID blockId) {
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @ApiModelProperty(value = "")
  public BlockID getBlockId() {
    return blockId;
  }

  public void setBlockId(BlockID blockId) {
    this.blockId = blockId;
  }

  public BlockLastCommit precommits(List<BlockLastCommitPrecommits> precommits) {
    this.precommits = precommits;
    return this;
  }

  public BlockLastCommit addPrecommitsItem(BlockLastCommitPrecommits precommitsItem) {
    if (this.precommits == null) {
      this.precommits = new ArrayList<>();
    }
    this.precommits.add(precommitsItem);
    return this;
  }

   /**
   * Get precommits
   * @return precommits
  **/
  @ApiModelProperty(value = "")
  public List<BlockLastCommitPrecommits> getPrecommits() {
    return precommits;
  }

  public void setPrecommits(List<BlockLastCommitPrecommits> precommits) {
    this.precommits = precommits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockLastCommit blockLastCommit = (BlockLastCommit) o;
    return Objects.equals(this.blockId, blockLastCommit.blockId) &&
        Objects.equals(this.precommits, blockLastCommit.precommits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockId, precommits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockLastCommit {\n");
    
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    precommits: ").append(toIndentedString(precommits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

