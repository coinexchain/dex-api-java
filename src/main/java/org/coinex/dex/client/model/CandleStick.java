/*
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coinex.dex.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CandleStick
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-09T11:28:51.986+08:00")
public class CandleStick {
  @SerializedName("open")
  private String open = null;

  @SerializedName("close")
  private String close = null;

  @SerializedName("high")
  private String high = null;

  @SerializedName("low")
  private String low = null;

  @SerializedName("total")
  private String total = null;

  @SerializedName("unix_time")
  private Long unixTime = null;

  @SerializedName("time_span")
  private Integer timeSpan = null;

  @SerializedName("market")
  private String market = null;

  public CandleStick open(String open) {
    this.open = open;
    return this;
  }

   /**
   * open price
   * @return open
  **/
  @ApiModelProperty(example = "0", value = "open price")
  public String getOpen() {
    return open;
  }

  public void setOpen(String open) {
    this.open = open;
  }

  public CandleStick close(String close) {
    this.close = close;
    return this;
  }

   /**
   * close price
   * @return close
  **/
  @ApiModelProperty(example = "0", value = "close price")
  public String getClose() {
    return close;
  }

  public void setClose(String close) {
    this.close = close;
  }

  public CandleStick high(String high) {
    this.high = high;
    return this;
  }

   /**
   * high price
   * @return high
  **/
  @ApiModelProperty(example = "0", value = "high price")
  public String getHigh() {
    return high;
  }

  public void setHigh(String high) {
    this.high = high;
  }

  public CandleStick low(String low) {
    this.low = low;
    return this;
  }

   /**
   * low price
   * @return low
  **/
  @ApiModelProperty(example = "0", value = "low price")
  public String getLow() {
    return low;
  }

  public void setLow(String low) {
    this.low = low;
  }

  public CandleStick total(String total) {
    this.total = total;
    return this;
  }

   /**
   * total deal
   * @return total
  **/
  @ApiModelProperty(example = "0", value = "total deal")
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }

  public CandleStick unixTime(Long unixTime) {
    this.unixTime = unixTime;
    return this;
  }

   /**
   * ending unix time
   * @return unixTime
  **/
  @ApiModelProperty(example = "1565740800", value = "ending unix time")
  public Long getUnixTime() {
    return unixTime;
  }

  public void setUnixTime(Long unixTime) {
    this.unixTime = unixTime;
  }

  public CandleStick timeSpan(Integer timeSpan) {
    this.timeSpan = timeSpan;
    return this;
  }

   /**
   * Minute:16/Hour:32/Day:48
   * @return timeSpan
  **/
  @ApiModelProperty(example = "16", value = "Minute:16/Hour:32/Day:48")
  public Integer getTimeSpan() {
    return timeSpan;
  }

  public void setTimeSpan(Integer timeSpan) {
    this.timeSpan = timeSpan;
  }

  public CandleStick market(String market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @ApiModelProperty(example = "abc/cet", value = "")
  public String getMarket() {
    return market;
  }

  public void setMarket(String market) {
    this.market = market;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CandleStick candleStick = (CandleStick) o;
    return Objects.equals(this.open, candleStick.open) &&
        Objects.equals(this.close, candleStick.close) &&
        Objects.equals(this.high, candleStick.high) &&
        Objects.equals(this.low, candleStick.low) &&
        Objects.equals(this.total, candleStick.total) &&
        Objects.equals(this.unixTime, candleStick.unixTime) &&
        Objects.equals(this.timeSpan, candleStick.timeSpan) &&
        Objects.equals(this.market, candleStick.market);
  }

  @Override
  public int hashCode() {
    return Objects.hash(open, close, high, low, total, unixTime, timeSpan, market);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CandleStick {\n");
    
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    close: ").append(toIndentedString(close)).append("\n");
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    unixTime: ").append(toIndentedString(unixTime)).append("\n");
    sb.append("    timeSpan: ").append(toIndentedString(timeSpan)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

